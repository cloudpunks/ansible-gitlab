---
- name: Download repo key
  shell:
    cmd: "curl -sSL 'https://packages.gitlab.com/gitlab/gitlab-ce/gpgkey' | gpg --dearmor --output {{ gitlab_keyring }}"
    creates: "{{ gitlab_keyring }}"
  tags:
    - gitlab

- name: Add apt repository
  apt_repository:
    repo: "deb [signed-by={{ gitlab_keyring }}] https://packages.gitlab.com/gitlab/gitlab-ce/ubuntu/ {{ ansible_distribution_release }} main"
    filename: gitlab
    update_cache: True
    state: present
  tags:
    - gitlab

- name: Pin package version
  copy:
    content: |
      Explantion: Pin added by gitlab role
      Package: gitlab-ce
      Pin: version {{ gitlab_version }}*
      Pin-Priority: 1000
    dest: /etc/apt/preferences.d/gitlab
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  tags:
    - gitlab

- name: Install required packages
  loop:
    - curl
    - openssl
    - tzdata
    - "gitlab-ce={{ gitlab_version }}*"
  package:
    name: "{{ item }}"
    state: present
  tags:
    - gitlab

- name: Initial reconfigure run
  failed_when: False
  command:
    cmd: gitlab-ctl reconfigure
    creates: /var/opt/gitlab/bootstrapped
  tags:
    - gitlab

- name: Write config template
  notify:
    - Restart gitlab
  template:
    src: gitlab.j2
    dest: /etc/gitlab/gitlab.rb
    owner: root
    group: root
    mode: u=rw,g=,o=
  tags:
    - gitlab

- name: Create daily cronjob
  cron:
    name: daily
    cron_file: gitlab
    minute: "{{ gitlab_prune_daily_minute }}"
    hour: "{{ gitlab_prune_daily_hour }}"
    day: "{{ gitlab_prune_daily_day }}"
    month: "{{ gitlab_prune_daily_month }}"
    weekday: "{{ gitlab_prune_daily_weekday }}"
    job: "{{ gitlab_prune_daily_job }}"
    user: root
    state: "{{ 'present' if gitlab_prune_daily_enabled else 'absent' }}"
  tags:
    - gitlab

- name: Write daily prune
  when:
    - gitlab_prune_daily_enabled
  template:
    src: prune/daily.j2
    dest: "{{ gitlab_prune_daily_path }}"
    owner: root
    group: root
    mode: u=rwx,g=,o=
  tags:
    - gitlab

- name: Remove daily prune
  when:
    - not gitlab_prune_daily_enabled
  file:
    path: "{{ gitlab_prune_daily_path }}"
    state: absent
  tags:
    - gitlab

- name: Create weekly cronjob
  cron:
    name: weekly
    cron_file: gitlab
    minute: "{{ gitlab_prune_weekly_minute }}"
    hour: "{{ gitlab_prune_weekly_hour }}"
    day: "{{ gitlab_prune_weekly_day }}"
    month: "{{ gitlab_prune_weekly_month }}"
    weekday: "{{ gitlab_prune_weekly_weekday }}"
    job: "{{ gitlab_prune_weekly_job }}"
    user: root
    state: "{{ 'present' if gitlab_prune_weekly_enabled else 'absent' }}"
  tags:
    - gitlab

- name: Write weekly prune
  when:
    - gitlab_prune_weekly_enabled
  template:
    src: prune/weekly.j2
    dest: "{{ gitlab_prune_weekly_path }}"
    owner: root
    group: root
    mode: u=rwx,g=,o=
  tags:
    - gitlab

- name: Remove weekly prune
  when:
    - not gitlab_prune_weekly_enabled
  file:
    path: "{{ gitlab_prune_weekly_path }}"
    state: absent
  tags:
    - gitlab

- name: Create config cronjob
  cron:
    name: config
    cron_file: gitlab
    minute: "{{ gitlab_config_backup_minute }}"
    hour: "{{ gitlab_config_backup_hour }}"
    day: "{{ gitlab_config_backup_day }}"
    month: "{{ gitlab_config_backup_month }}"
    weekday: "{{ gitlab_config_backup_weekday }}"
    job: "{{ gitlab_config_backup_job }}"
    user: root
    state: "{{ 'present' if gitlab_config_backup_enabled else 'absent' }}"
  tags:
    - gitlab

- name: Write config backup
  when:
    - gitlab_config_backup_enabled
  template:
    src: backup/config.j2
    dest: "{{ gitlab_config_backup_path }}"
    owner: root
    group: root
    mode: u=rwx,g=,o=
  tags:
    - gitlab

- name: Remove config backup
  when:
    - not gitlab_config_backup_enabled
  file:
    path: "{{ gitlab_config_backup_path }}"
    state: absent
  tags:
    - gitlab

- name: Create content cronjob
  cron:
    name: content
    cron_file: gitlab
    minute: "{{ gitlab_content_backup_minute }}"
    hour: "{{ gitlab_content_backup_hour }}"
    day: "{{ gitlab_content_backup_day }}"
    month: "{{ gitlab_content_backup_month }}"
    weekday: "{{ gitlab_content_backup_weekday }}"
    job: "{{ gitlab_content_backup_job }}"
    user: root
    state: "{{ 'present' if gitlab_content_backup_enabled else 'absent' }}"
  tags:
    - gitlab

- name: Write content backup
  when:
    - gitlab_content_backup_enabled
  template:
    src: backup/content.j2
    dest: "{{ gitlab_content_backup_path }}"
    owner: root
    group: root
    mode: u=rwx,g=,o=
  tags:
    - gitlab

- name: Remove content backup
  when:
    - not gitlab_content_backup_enabled
  file:
    path: "{{ gitlab_content_backup_path }}"
    state: absent
  tags:
    - gitlab

...
